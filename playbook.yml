---
- name: Apply common configurations to all servers
  hosts: all
  become: yes

  tasks:
    - name: Disable SELinux (for Amazon Linux)
      command: setenforce 0
      when: ansible_distribution == "Amazon"

    - name: Disable firewalld
      service:
        name: firewalld
        state: stopped
        enabled: no
      when: ansible_distribution == "Amazon"

    - name: Disable SELinux (for Ubuntu)
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: 'SELINUX=disabled'
      when: ansible_distribution == "Ubuntu"

- name: Configure frontend servers
  hosts: frontend
  become: yes

  tasks:
    - name: Install Nginx
      yum:
        name: nginx
        state: present
      when: ansible_distribution == "Amazon"

    - name: Configure Nginx for proxying
      blockinfile:
        path: /etc/nginx/nginx.conf
        block: |
          server {
              listen 80;
              server_name c8.local;

              location / {
                  proxy_pass http://backend:19999;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              }
          }
      notify:
        - Restart Nginx

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

- name: Configure backend servers
  hosts: backend
  become: yes

  tasks:
    - name: Install Netdata
      apt:
        name: netdata
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Start Netdata service
      service:
        name: netdata
        state: started
        enabled: yes
